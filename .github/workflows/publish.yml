name: Publish package to GitHub Packages
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all tags so we can check if the version has been bumped
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
      # Setup .npmrc file to publish to GitHub Packages
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: 'https://npm.pkg.github.com'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build
        run: pnpm run build

      - name: Check if package version has been bumped
        id: version_check
        run: |
          current_version=$(jq -r '.version' package.json)
          echo "Current version: $current_version"

          git fetch --tags
          previous_version=$(git tag --sort=-v:refname | head -n 1 || echo "none")
          echo "Previous version: $previous_version"

          if [ "$previous_version" == "v$current_version" ]; then
            echo "Version has not been bumped. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version has been bumped. Proceeding with publish."
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "current_version=$current_version" >> $GITHUB_OUTPUT
          fi

      - name: Publish to GitHub Packages
        if: steps.version_check.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.version_check.outputs.should_publish == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "v${{ steps.version_check.outputs.current_version }}"
          git push origin "v${{ steps.version_check.outputs.current_version }}"
          release_notes=$(git log -1 --pretty=%B)
          gh release create "v${{ steps.version_check.outputs.current_version }}" --title "v${{ steps.version_check.outputs.current_version }}" --notes "${release_notes}"
